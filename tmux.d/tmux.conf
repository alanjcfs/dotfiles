# screen-256color-bce if you want to do background color erase
# xterm-256color causes background to bleed through improperly
# set-option -g default-terminal "screen-256color"
set-option -g default-terminal "xterm-256color"

# Set escape-time (in ms)
set-option -sg escape-time 10

# display-panes are things like "Activity in Window 0"
# display-times is after you enter a command that tmux doesn't understand
set-option -g display-panes-time 1000
set-option -g display-time 2000

# Add this to your ~/.Xresources for clipboard integration:
#  XTerm*.disallowedWindowOps:20,21,SetXprop
# UXTerm*.disallowedWindowOps:22,21,SetXprop
# set-option -s set-clipboard on

# Enable mouse support (works only in iTerm)
set-option -g mouse on

# Set C-a as prefix like screen and byobu
unbind-key C-b
set-option -g prefix C-a
# bind-key a send-prefix

# Make send-prefix + send-prefix send you to previous window
bind-key C-a send-prefix
bind-key C-s last-window

# Set secondary prefix
set-option -g prefix2 C-a
bind-key a send-prefix -2

# Set | and - to split window vertically and horizontally
# Default is " for horizontal and % for vertical
unbind-key c
unbind-key %
unbind-key '"'
bind-key c new-window -c "#{pane_current_path}"
bind-key % split-window -hc "#{pane_current_path}"
bind-key '"' split-window -vc "#{pane_current_path}"

# Monitor all windows and set it to display status line message
setw -g monitor-activity on
set -g visual-activity on

# Prevent application from renaming window
set-window-option -g allow-rename off

# See mem and cpu load, must install tmux-mem-cpu-load
# set -g status-right "#S #[fg=green,bg=black]#(tmux-mem-cpu-load --colors 2)#[default]"
# Change cursor in vim to distinguish between insert and command mode
# set-option -g terminal-overrides
# '*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cc=\E]12;%p1%s\007:Cr=\E]112\007:Cs=\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%p1%{2}%-%;%d\007'

# # scrollback buffer size increase
set -g history-limit 10000

# # use prefix p to paste the tmux buffer
bind p paste-buffer

# Setup 'v' to begin selection as in Vim
bind Escape send -X copy-mode
bind-key -Tcopy-mode-vi v send -X begin-selection
bind-key -Tcopy-mode-vi y send -X copy-selection

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter

# Resize panes
bind-key < resize-pane -L 12
bind-key > resize-pane -R 12
bind-key V resize-pane -D 4
bind-key ^ resize-pane -U 4

# Act like Vim
# Use vim keybindings in copy mode
set-window-option -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n 'C-\' if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"

# Be able to use Ctrl-L to clear screen with a prefix
bind C-l send-keys 'C-l'

# source-file $HOME/.files/tmux.d/colours/tmuxcolors-256.conf
source-file $HOME/.files/tmux.d/colours/tmuxcolors-dark.conf
# source-file $HOME/.files/tmux.d/colours/tmuxcolors-light.conf
# source-file $HOME/.files/tmux.d/colours/tmuxcolors-badwolf.conf

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.files/tmux.d/plugins/'

if-shell "uname | grep -q Darwin" "source-file $HOME/.files/tmux.d/tmux.osx.conf"
